apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "org.jetbrains.kotlin.android"

android {
    ndkVersion rootProject.ext.ndkVersion
    
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.mangaai"
    defaultConfig {
        applicationId "com.mangaai"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        multiDexEnabled true
        
        // Repository and source compatibility
        manifestPlaceholders = [
            appAuthRedirectScheme: 'com.mangaai'
        ]
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            // Production signing config
            if (project.hasProperty('MANGAAI_UPLOAD_STORE_FILE')) {
                storeFile file(MANGAAI_UPLOAD_STORE_FILE)
                storePassword MANGAAI_UPLOAD_STORE_PASSWORD
                keyAlias MANGAAI_UPLOAD_KEY_ALIAS
                keyPassword MANGAAI_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }
}

dependencies {
    implementation "com.facebook.react:react-android"
    implementation "com.facebook.react:flipper-integration"
    
    // AndroidX libraries
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    
    // Material Design
    implementation 'com.google.android.material:material:1.11.0'
    
    // Network and HTTP
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    // Image loading and processing
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Video player (ExoPlayer)
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    
    // SQLite database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'
    
    // Work manager for background tasks
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // OCR and image processing
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'
    
    if (enableHermes) {
        //noinspection GradleDynamicVersion
        implementation("com.facebook.react:hermes-engine:+") { // From node_modules
            exclude group:'com.facebook.fbjni'
        }
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)